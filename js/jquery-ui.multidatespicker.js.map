{"version":3,"names":[],"mappings":"","sources":["jquery-ui.multidatespicker.js"],"sourcesContent":["/*\r\n * MultiDatesPicker v1.6.4\r\n * http://multidatespickr.sourceforge.net/\r\n * \r\n * Copyright 2014, Luca Lauretta\r\n * Dual licensed under the MIT or GPL version 2 licenses.\r\n */\r\n\r\n(function( $ ){\r\n\t$.extend($.ui, { multiDatesPicker: { version: \"1.6.4\" } });\r\n\t\r\n\t$.fn.multiDatesPicker = function(method) {\r\n\t\tvar mdp_arguments = arguments;\r\n\t\tvar ret = this;\r\n\t\tvar today_date = new Date();\r\n\t\tvar day_zero = new Date(0);\r\n\t\tvar mdp_events = {};\r\n\t\t\r\n\t\tfunction removeDate(date, type) {\r\n\t\t\tif(!type) type = 'picked';\r\n\t\t\tdate = dateConvert.call(this, date);\r\n\t\t\tfor(var i = 0; i < this.multiDatesPicker.dates[type].length; i++)\r\n\t\t\t\tif(!methods.compareDates(this.multiDatesPicker.dates[type][i], date))\r\n\t\t\t\t\treturn this.multiDatesPicker.dates[type].splice(i, 1).pop();\r\n\t\t}\r\n\t\tfunction removeIndex(index, type) {\r\n\t\t\tif(!type) type = 'picked';\r\n\t\t\treturn this.multiDatesPicker.dates[type].splice(index, 1).pop();\r\n\t\t}\r\n\t\tfunction addDate(date, type, no_sort) {\r\n\t\t\tif(!type) type = 'picked';\r\n\t\t\tdate = dateConvert.call(this, date);\r\n\t\t\t\r\n\t\t\t// @todo: use jQuery UI datepicker method instead\r\n\t\t\tdate.setHours(0);\r\n\t\t\tdate.setMinutes(0);\r\n\t\t\tdate.setSeconds(0);\r\n\t\t\tdate.setMilliseconds(0);\r\n\t\t\t\r\n\t\t\tif (methods.gotDate.call(this, date, type) === false) {\r\n\t\t\t\tthis.multiDatesPicker.dates[type].push(date);\r\n\t\t\t\tif(!no_sort) this.multiDatesPicker.dates[type].sort(methods.compareDates);\r\n\t\t\t} \r\n\t\t}\r\n\t\tfunction sortDates(type) {\r\n\t\t\tif(!type) type = 'picked';\r\n\t\t\tthis.multiDatesPicker.dates[type].sort(methods.compareDates);\r\n\t\t}\r\n\t\tfunction dateConvert(date, desired_type, date_format) {\r\n\t\t\tif(!desired_type) desired_type = 'object';\r\n\t\t\t/*if(!date_format && (typeof date == 'string')) {\r\n\t\t\t\tdate_format = $(this).datepicker('option', 'dateFormat');\r\n\t\t\t\tif(!date_format) date_format = $.datepicker.dateFormat;\r\n\t\t\t}\r\n*/\r\n\t\t\treturn methods.dateConvert.call(this, date, desired_type, date_format);\r\n\t\t}\r\n\t\t\r\n\t\tvar methods = {\r\n\t\t\tinit : function( options ) {\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tthis.multiDatesPicker.changed = false;\r\n\t\t\t\t\r\n\t\t\t\tvar mdp_events = {\r\n\t\t\t\t\tbeforeShow: function(input, inst) {\r\n\t\t\t\t\t\tthis.multiDatesPicker.changed = false;\r\n\t\t\t\t\t\tif(this.multiDatesPicker.originalBeforeShow) \r\n\t\t\t\t\t\t\tthis.multiDatesPicker.originalBeforeShow.call(this, input, inst);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tonSelect : function(dateText, inst) {\r\n\t\t\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\t\tthis.multiDatesPicker.changed = true;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (dateText) {\r\n\t\t\t\t\t\t\t$this.multiDatesPicker('toggleDate', dateText);\r\n\t\t\t\t\t\t\tthis.multiDatesPicker.changed = true;\r\n\t\t\t\t\t\t\t// @todo: this will be optimized when I'll move methods to the singleton.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.multiDatesPicker.mode == 'normal' && this.multiDatesPicker.pickableRange) {\r\n\t\t\t\t\t\t\tif(this.multiDatesPicker.dates.picked.length > 0) {\r\n\t\t\t\t\t\t\t\tvar min_date = this.multiDatesPicker.dates.picked[0],\r\n\t\t\t\t\t\t\t\t\tmax_date = new Date(min_date.getTime());\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tmethods.sumDays(max_date, this.multiDatesPicker.pickableRange-1);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// counts the number of disabled dates in the range\r\n\t\t\t\t\t\t\t\tif(this.multiDatesPicker.adjustRangeToDisabled) {\r\n\t\t\t\t\t\t\t\t\tvar c_disabled, \r\n\t\t\t\t\t\t\t\t\t\tdisabled = this.multiDatesPicker.dates.disabled.slice(0);\r\n\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\tc_disabled = 0;\r\n\t\t\t\t\t\t\t\t\t\tfor(var i = 0; i < disabled.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(disabled[i].getTime() <= max_date.getTime()) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif((min_date.getTime() <= disabled[i].getTime()) && (disabled[i].getTime() <= max_date.getTime()) ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tc_disabled++;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled.splice(i, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tmax_date.setDate(max_date.getDate() + c_disabled);\r\n\t\t\t\t\t\t\t\t\t} while(c_disabled != 0);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif(this.multiDatesPicker.maxDate && (max_date > this.multiDatesPicker.maxDate))\r\n\t\t\t\t\t\t\t\t\tmax_date = this.multiDatesPicker.maxDate;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t$this\r\n\t\t\t\t\t\t\t\t\t.datepicker(\"option\", \"minDate\", min_date)\r\n\t\t\t\t\t\t\t\t\t.datepicker(\"option\", \"maxDate\", max_date);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$this\r\n\t\t\t\t\t\t\t\t\t.datepicker(\"option\", \"minDate\", this.multiDatesPicker.minDate)\r\n\t\t\t\t\t\t\t\t\t.datepicker(\"option\", \"maxDate\", this.multiDatesPicker.maxDate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.multiDatesPicker.originalOnSelect && dateText)\r\n\t\t\t\t\t\t\tthis.multiDatesPicker.originalOnSelect.call(this, dateText, inst);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbeforeShowDay : function(date) {\r\n\t\t\t\t\t\tvar $this = $(this),\r\n\t\t\t\t\t\t\tgotThisDate = $this.multiDatesPicker('gotDate', date) !== false,\r\n\t\t\t\t\t\t\tisDisabledCalendar = $this.datepicker('option', 'disabled'),\r\n\t\t\t\t\t\t\tisDisabledDate = $this.multiDatesPicker('gotDate', date, 'disabled') !== false,\r\n\t\t\t\t\t\t\tareAllSelected = this.multiDatesPicker.maxPicks <= this.multiDatesPicker.dates.picked.length;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar bsdReturn = [true, '', null];\r\n\t\t\t\t\t\tif(this.multiDatesPicker.originalBeforeShowDay)\r\n\t\t\t\t\t\t\tbsdReturn = this.multiDatesPicker.originalBeforeShowDay.call(this, date);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbsdReturn[1] = gotThisDate ? 'ui-state-highlight '+bsdReturn[1] : bsdReturn[1];\r\n\t\t\t\t\t\tbsdReturn[0] = bsdReturn[0] && !(isDisabledCalendar || isDisabledDate || (areAllSelected && !bsdReturn[1]));\r\n\t\t\t\t\t\treturn bsdReturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t// value have to be extracted before datepicker is initiated\r\n\t\t\t\tif($this.val()) var inputDates = $this.val()\r\n\t\t\t\t\r\n\t\t\t\tif(options) {\r\n\t\t\t\t\t// value have to be extracted before datepicker is initiated\r\n\t\t\t\t\t//if(options.altField) var inputDates = $(options.altField).val();\r\n\t\t\t\t\tif(options.separator) this.multiDatesPicker.separator = options.separator;\r\n\t\t\t\t\tif(!this.multiDatesPicker.separator) this.multiDatesPicker.separator = ', ';\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.multiDatesPicker.originalBeforeShow = options.beforeShow;\r\n\t\t\t\t\tthis.multiDatesPicker.originalOnSelect = options.onSelect;\r\n\t\t\t\t\tthis.multiDatesPicker.originalBeforeShowDay = options.beforeShowDay;\r\n\t\t\t\t\tthis.multiDatesPicker.originalOnClose = options.onClose;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// datepicker init\r\n\t\t\t\t\t$this.datepicker(options);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.multiDatesPicker.minDate = $.datepicker._determineDate(this, options.minDate, null);\r\n\t\t\t\t\tthis.multiDatesPicker.maxDate = $.datepicker._determineDate(this, options.maxDate, null);\r\n\t\t\t\t\tif(options.addDates) methods.addDates.call(this, options.addDates);\r\n\t\t\t\t\t \r\n\t\t\t\t\tif(options.addDisabledDates)\r\n\t\t\t\t\t\tmethods.addDates.call(this, options.addDisabledDates, 'disabled');\r\n\t\t\t\t\t\r\n\t\t\t\t\tmethods.setMode.call(this, options);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$this.datepicker();\r\n\t\t\t\t}\r\n\t\t\t\t$this.datepicker('option', mdp_events);\r\n\t\t\t\t\r\n\t\t\t\t// adds any dates found in the input or alt field\r\n\t\t\t\tif(inputDates) $this.multiDatesPicker('value', inputDates);\r\n\t\t\t\t\r\n\t\t\t\t// generates the new string of added dates\r\n\t\t\t\tvar inputs_values = $this.multiDatesPicker('value');\r\n\t\t\t\t\r\n\t\t\t\t// fills the input field back with all the dates in the calendar\r\n\t\t\t\t$this.val(inputs_values);\r\n\t\t\t\t\r\n\t\t\t\t// Fixes the altField filled with defaultDate by default\r\n\t\t\t\tvar altFieldOption = $this.datepicker('option', 'altField');\r\n\t\t\t\tif (altFieldOption) $(altFieldOption).val(inputs_values);\r\n\t\t\t\t\r\n\t\t\t\t// Updates the calendar view\r\n\t\t\t\t$this.datepicker('refresh');\r\n\t\t\t},\r\n\t\t\tcompareDates : function(date1, date2) {\r\n\t\t\t\tdate1 = dateConvert.call(this, date1);\r\n\t\t\t\tdate2 = dateConvert.call(this, date2);\r\n\t\t\t\t// return > 0 means date1 is later than date2 \r\n\t\t\t\t// return == 0 means date1 is the same day as date2 \r\n\t\t\t\t// return < 0 means date1 is earlier than date2 \r\n\t\t\t\tvar diff = date1.getFullYear() - date2.getFullYear();\r\n\t\t\t\tif(!diff) {\r\n\t\t\t\t\tdiff = date1.getMonth() - date2.getMonth();\r\n\t\t\t\t\tif(!diff) \r\n\t\t\t\t\t\tdiff = date1.getDate() - date2.getDate();\r\n\t\t\t\t}\r\n\t\t\t\treturn diff;\r\n\t\t\t},\r\n\t\t\tsumDays : function( date, n_days ) {\r\n\t\t\t\tvar origDateType = typeof date;\r\n\t\t\t\tobj_date = dateConvert.call(this, date);\r\n\t\t\t\tobj_date.setDate(obj_date.getDate() + n_days);\r\n\t\t\t\treturn dateConvert.call(this, obj_date, origDateType);\r\n\t\t\t},\r\n\t\t\tdateConvert : function( date, desired_format, dateFormat ) {\r\n\t\t\t\tvar from_format = typeof date;\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\t\r\n\t\t\t\tif(from_format == desired_format) {\r\n\t\t\t\t\tif(from_format == 'object') {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdate.getTime();\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t$.error('Received date is in a non supported format!');\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn date;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(typeof date == 'undefined') date = new Date(0);\r\n\t\t\t\t\r\n\t\t\t\tif(desired_format != 'string' && desired_format != 'object' && desired_format != 'number')\r\n\t\t\t\t\t$.error('Date format \"'+ desired_format +'\" not supported!');\r\n\t\t\t\t\r\n\t\t\t\tif(!dateFormat) {\r\n\t\t\t\t\t// thanks to bibendus83 -> http://sourceforge.net/tracker/index.php?func=detail&aid=3213174&group_id=358205&atid=1495382\r\n\t\t\t\t\tvar dp_dateFormat = $this.datepicker('option', 'dateFormat');\r\n\t\t\t\t\tif (dp_dateFormat) {\r\n\t\t\t\t\t\tdateFormat = dp_dateFormat;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdateFormat = $.datepicker._defaults.dateFormat;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch(from_format) {\r\n\t\t\t\t\tcase 'object': break;\r\n          case 'string': date = $.datepicker.parseDate(dateFormat, date); break;\r\n\t\t\t\t\tcase 'number': date = new Date(date); break;\r\n\t\t\t\t\tdefault: $.error('Conversion from \"'+ desired_format +'\" format not allowed on jQuery.multiDatesPicker');\r\n\t\t\t\t}\r\n\t\t\t\t// then converts to the desired format\r\n\t\t\t\tswitch(desired_format) {\r\n\t\t\t\t\tcase 'object': return date;\r\n\t\t\t\t\tcase 'string': return $.datepicker.formatDate(dateFormat, date);\r\n\t\t\t\t\tcase 'number': return date.getTime();\r\n\t\t\t\t\tdefault: $.error('Conversion to \"'+ desired_format +'\" format not allowed on jQuery.multiDatesPicker');\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tgotDate : function( date, type ) {\r\n\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\tfor(var i = 0; i < this.multiDatesPicker.dates[type].length; i++) {\r\n\t\t\t\t\tif(methods.compareDates.call(this, this.multiDatesPicker.dates[type][i], date) === 0) {\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tvalue : function( value ) {\r\n\t\t\t\tif(value && typeof value == 'string') {\r\n\t\t\t\t\tmethods.addDates.call(this, value.split(this.multiDatesPicker.separator));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar dates = methods.getDates.call(this, 'string');\r\n\t\t\t\t\treturn dates.length\r\n\t\t\t\t\t\t? dates.join(this.multiDatesPicker.separator)\r\n\t\t\t\t\t\t: \"\";\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetDates : function( format, type ) {\r\n\t\t\t\tif(!format) format = 'string';\r\n\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\tswitch (format) {\r\n\t\t\t\t\tcase 'object':\r\n\t\t\t\t\t\treturn this.multiDatesPicker.dates[type];\r\n\t\t\t\t\tcase 'string':\r\n\t\t\t\t\tcase 'number':\r\n\t\t\t\t\t\tvar o_dates = new Array();\r\n\t\t\t\t\t\tfor(var i in this.multiDatesPicker.dates[type])\r\n\t\t\t\t\t\t\to_dates.push(\r\n\t\t\t\t\t\t\t\tdateConvert.call(\r\n\t\t\t\t\t\t\t\t\tthis, \r\n\t\t\t\t\t\t\t\t\tthis.multiDatesPicker.dates[type][i], \r\n\t\t\t\t\t\t\t\t\tformat\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn o_dates;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault: $.error('Format \"'+format+'\" not supported!');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddDates : function( dates, type ) {\r\n\t\t\t\tif(dates.length > 0) {\r\n\t\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\t\tswitch(typeof dates) {\r\n\t\t\t\t\t\tcase 'object':\r\n\t\t\t\t\t\tcase 'array':\r\n\t\t\t\t\t\t\tif(dates.length) {\r\n\t\t\t\t\t\t\t\tfor(var i = 0; i < dates.length; i++)\r\n\t\t\t\t\t\t\t\t\taddDate.call(this, dates[i], type, true);\r\n\t\t\t\t\t\t\t\tsortDates.call(this, type);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t} // else does the same as 'string'\r\n\t\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\tcase 'number':\r\n\t\t\t\t\t\t\taddDate.call(this, dates, type);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault: \r\n\t\t\t\t\t\t\t$.error('Date format \"'+ typeof dates +'\" not allowed on jQuery.multiDatesPicker');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//$(this).datepicker('refresh');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.error('Empty array of dates received.');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tremoveDates : function( dates, type ) {\r\n\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\tvar removed = [];\r\n\t\t\t\tif (Object.prototype.toString.call(dates) === '[object Array]') {\r\n\t\t\t\t\tfor(var i in dates.sort(function(a,b){return b-a})) {\r\n\t\t\t\t\t\tremoved.push(removeDate.call(this, dates[i], type));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tremoved.push(removeDate.call(this, dates, type));\r\n\t\t\t\t}\r\n\t\t\t\treturn removed;\r\n\t\t\t},\r\n\t\t\tremoveIndexes : function( indexes, type ) {\r\n\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\tvar removed = [];\r\n\t\t\t\tif (Object.prototype.toString.call(indexes) === '[object Array]') {\r\n\t\t\t\t\tfor(var i in indexes.sort(function(a,b){return b-a})) {\r\n\t\t\t\t\t\tremoved.push(removeIndex.call(this, indexes[i], type));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tremoved.push(removeIndex.call(this, indexes, type));\r\n\t\t\t\t}\r\n\t\t\t\treturn removed;\r\n\t\t\t},\r\n\t\t\tresetDates : function ( type ) {\r\n\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\tthis.multiDatesPicker.dates[type] = [];\r\n\t\t\t},\r\n\t\t\ttoggleDate : function( date, type ) {\r\n\t\t\t\tif(!type) type = 'picked';\r\n\t\t\t\t\r\n\t\t\t\tswitch(this.multiDatesPicker.mode) {\r\n\t\t\t\t\tcase 'daysRange':\r\n\t\t\t\t\t\tthis.multiDatesPicker.dates[type] = []; // deletes all picked/disabled dates\r\n\t\t\t\t\t\tvar end = this.multiDatesPicker.autoselectRange[1];\r\n\t\t\t\t\t\tvar begin = this.multiDatesPicker.autoselectRange[0];\r\n\t\t\t\t\t\tif(end < begin) { // switch\r\n\t\t\t\t\t\t\tend = this.multiDatesPicker.autoselectRange[0];\r\n\t\t\t\t\t\t\tbegin = this.multiDatesPicker.autoselectRange[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(var i = begin; i < end; i++) \r\n\t\t\t\t\t\t\tmethods.addDates.call(this, methods.sumDays.call(this,date, i), type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(methods.gotDate.call(this, date) === false) // adds dates\r\n\t\t\t\t\t\t\tmethods.addDates.call(this, date, type);\r\n\t\t\t\t\t\telse // removes dates\r\n\t\t\t\t\t\t\tmethods.removeDates.call(this, date, type);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}, \r\n\t\t\tsetMode : function( options ) {\r\n\t\t\t\tvar $this = $(this);\r\n\t\t\t\tif(options.mode) this.multiDatesPicker.mode = options.mode;\r\n\t\t\t\t\r\n\t\t\t\tswitch(this.multiDatesPicker.mode) {\r\n\t\t\t\t\tcase 'normal':\r\n\t\t\t\t\t\tfor(option in options)\r\n\t\t\t\t\t\t\tswitch(option) {\r\n\t\t\t\t\t\t\t\tcase 'maxPicks':\r\n\t\t\t\t\t\t\t\tcase 'minPicks':\r\n\t\t\t\t\t\t\t\tcase 'pickableRange':\r\n\t\t\t\t\t\t\t\tcase 'adjustRangeToDisabled':\r\n\t\t\t\t\t\t\t\t\tthis.multiDatesPicker[option] = options[option];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t//default: $.error('Option ' + option + ' ignored for mode \"'.options.mode.'\".');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'daysRange':\r\n\t\t\t\t\tcase 'weeksRange':\r\n\t\t\t\t\t\tvar mandatory = 1;\r\n\t\t\t\t\t\tfor(option in options)\r\n\t\t\t\t\t\t\tswitch(option) {\r\n\t\t\t\t\t\t\t\tcase 'autoselectRange':\r\n\t\t\t\t\t\t\t\t\tmandatory--;\r\n\t\t\t\t\t\t\t\tcase 'pickableRange':\r\n\t\t\t\t\t\t\t\tcase 'adjustRangeToDisabled':\r\n\t\t\t\t\t\t\t\t\tthis.multiDatesPicker[option] = options[option];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t//default: $.error('Option ' + option + ' does not exist for setMode on jQuery.multiDatesPicker');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(mandatory > 0) $.error('Some mandatory options not specified!');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\tif(options.pickableRange) {\r\n\t\t\t\t\t$this.datepicker(\"option\", \"maxDate\", options.pickableRange);\r\n\t\t\t\t\t$this.datepicker(\"option\", \"minDate\", this.multiDatesPicker.minDate);\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\t\r\n\t\t\t\tif(mdp_events.onSelect)\r\n\t\t\t\t\tmdp_events.onSelect();\r\n\t\t\t},\r\n\t\t\tdestroy: function(){\r\n\t\t\t\tthis.multiDatesPicker = null;\r\n\t\t\t\t$(this).datepicker('destroy');\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tthis.each(function() {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tif (!this.multiDatesPicker) {\r\n\t\t\t\tthis.multiDatesPicker = {\r\n\t\t\t\t\tdates: {\r\n\t\t\t\t\t\tpicked: [],\r\n\t\t\t\t\t\tdisabled: []\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmode: 'normal',\r\n\t\t\t\t\tadjustRangeToDisabled: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(methods[method]) {\r\n\t\t\t\tvar exec_result = methods[method].apply(this, Array.prototype.slice.call(mdp_arguments, 1));\r\n\t\t\t\tswitch(method) {\r\n\t\t\t\t\tcase 'removeDates':\r\n\t\t\t\t\tcase 'removeIndexes':\r\n\t\t\t\t\tcase 'resetDates':\r\n\t\t\t\t\tcase 'toggleDate':\r\n\t\t\t\t\tcase 'addDates':\r\n\t\t\t\t\t\tvar altField = $this.datepicker('option', 'altField');\r\n\t\t\t\t\t\t// @todo: should use altFormat for altField\r\n\t\t\t\t\t\tvar dates_string = methods.value.call(this);\r\n\t\t\t\t\t\tif (altField !== undefined && altField != \"\") {\r\n\t\t\t\t\t\t\t$(altField).val(dates_string);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$this.val(dates_string);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.datepicker._refreshDatepicker(this);\r\n\t\t\t\t}\r\n\t\t\t\tswitch(method) {\r\n\t\t\t\t\tcase 'removeDates':\r\n\t\t\t\t\tcase 'getDates':\r\n\t\t\t\t\tcase 'gotDate':\r\n\t\t\t\t\tcase 'sumDays':\r\n\t\t\t\t\tcase 'compareDates':\r\n\t\t\t\t\tcase 'dateConvert':\r\n\t\t\t\t\tcase 'value':\r\n\t\t\t\t\t\tret = exec_result;\r\n\t\t\t\t}\r\n\t\t\t\treturn exec_result;\r\n\t\t\t} else if( typeof method === 'object' || ! method ) {\r\n\t\t\t\treturn methods.init.apply(this, mdp_arguments);\r\n\t\t\t} else {\r\n\t\t\t\t$.error('Method ' +  method + ' does not exist on jQuery.multiDatesPicker');\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}); \r\n\t\t\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tvar PROP_NAME = 'multiDatesPicker';\r\n\tvar dpuuid = new Date().getTime();\r\n\tvar instActive;\r\n\r\n\t$.multiDatesPicker = {version: false};\r\n\t//$.multiDatesPicker = new MultiDatesPicker(); // singleton instance\r\n\t$.multiDatesPicker.initialized = false;\r\n\t$.multiDatesPicker.uuid = new Date().getTime();\r\n\t$.multiDatesPicker.version = $.ui.multiDatesPicker.version;\r\n\t\r\n\t// allows MDP not to hide everytime a date is picked\r\n\t$.multiDatesPicker._hideDatepicker = $.datepicker._hideDatepicker;\r\n\t$.datepicker._hideDatepicker = function(){\r\n\t\tvar target = this._curInst.input[0];\r\n\t\tvar mdp = target.multiDatesPicker;\r\n\t\tif(!mdp || (this._curInst.inline === false && !mdp.changed)) {\r\n\t\t\treturn $.multiDatesPicker._hideDatepicker.apply(this, arguments);\r\n\t\t} else {\r\n\t\t\tmdp.changed = false;\r\n\t\t\t$.datepicker._refreshDatepicker(target);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\t// Workaround for #4055\r\n\t// Add another global to avoid noConflict issues with inline event handlers\r\n\twindow['DP_jQuery_' + dpuuid] = $;\r\n})( jQuery );"],"file":"jquery-ui.multidatespicker.js"}